language: python
sudo: false
python:
  - 2.7
  - 3.4
  - 3.5
cache:
  directories:
    - $HOME/.cache/pip
env:
  - DJANGO=django==1.7.10
  - DJANGO=django==1.7.10 DB_ENGINE="django.db.backends.postgresql_psycopg2" DB_NAME="test_project" DB_USER="postgres"
  - DJANGO=django==1.7.10 DB_ENGINE="django.db.backends.mysql" DB_NAME="test_project" DB_USER="travis"
  - DJANGO=django==1.8.4
  - DJANGO=django==1.8.4 DB_ENGINE="django.db.backends.postgresql_psycopg2" DB_NAME="test_project" DB_USER="postgres"
  - DJANGO=django==1.8.4 DB_ENGINE="django.db.backends.mysql" DB_NAME="test_project" DB_USER="travis"
  - DJANGO=django==1.9a1
  - DJANGO=django==1.9a1 DB_ENGINE="django.db.backends.postgresql" DB_NAME="test_project" DB_USER="postgres"
  - DJANGO=django==1.9a1 DB_ENGINE="django.db.backends.mysql" DB_NAME="test_project" DB_USER="travis"
matrix:
  fast_finish: true
  exclude:
    - python: 3.5
      env: DJANGO=django==1.7.10
    - python: 3.5
      env: DJANGO=django==1.7.10 DB_ENGINE="django.db.backends.postgresql_psycopg2" DB_NAME="test_project" DB_USER="postgres"
    - python: 3.5
      env: DJANGO=django==1.7.10 DB_ENGINE="django.db.backends.mysql" DB_NAME="test_project" DB_USER="travis"
services:
  - postgresql
  - mysql
install:
  - travis_retry pip install $DJANGO
  - if [[ "$DB_ENGINE" == "django.db.backends.postgresql" ]] ; then travis_retry pip install psycopg2; fi
  - if [[ "$DB_ENGINE" == "django.db.backends.postgresql_psycopg2" ]] ; then travis_retry pip install psycopg2; fi
  - if [[ "$DB_ENGINE" == "django.db.backends.mysql" ]] ; then travis_retry pip install mysqlclient ; fi
  - pip install -e .[test,diff]
before_script:
  - if [[ "$DB_ENGINE" == "django.db.backends.mysql" ]] ; then mysql -e 'create database test_project'; fi
  - if [[ "$DB_ENGINE" == "django.db.backends.postgresql_psycopg2" ]] ; then psql -c 'create database test_project;' -U postgres; fi
  - if [[ "$DB_ENGINE" == "django.db.backends.postgresql" ]] ; then psql -c 'create database test_project;' -U postgres; fi
script: coverage run src/tests/manage.py test src/tests/test_reversion/
after_script: coverage report
notifications:
  email: false
